---
layout: post
title: "Work Style"
date: 2013-12-07 15:20:01 +0800
comments: true
categories: teamtoy
---
## 工作模式(暂行)
* 4 天计划, 前紧后松
* CoC, 主动 & 高效, 跨职能 的 技术团队
* 执行 **敏捷开发** 和 **文档驱动**
  * 每日站会, 详见 **45个习惯** 第 8 章
  * 代码集体所有制, 详见 **45个习惯** 第 8 章

## CoC: Convention over Configuration
* 习惯优于配置
* 达成目标的方式有很多种, 可以灵活配置, 但遵从习惯可以降低沟通成本
  * 版本控制: Git
  * Java 包管理和部署: Maven
  * 文档管理: wiki (Trac)
  * 项目管理: Trello
* 习惯可以改, 只要好处 >> 成本
<!-- more -->

## 主动&高效
* 主动提问, 站会匆匆而过, 没听明白的一定要问
* 主动沟通, 有问题超过 1h 搞不定, 就应该想想能找谁帮忙解决
* 主动通知, 邮件是广播 & 存档, 不能指望每个人都会看邮件, 但至少让 Ta 有地方去看
* 4 天做完 1 周的事, 剩下一天提高团队战斗力, 或者爱干嘛干嘛
* 一图抵万言, 确保大家说的 A 是同一个 A, 理解的 B 是同一个 B

## 跨职能
* 为了大家都能做一些爱做的事, 需要大家都做一些不爱做的事
* 每项工作都需要有至少 2 个人了解, 避免某件事情由于某个人不在就搞不定

## 技术团队
* 关注解决方案, 尽可能的解决问题
* 让 "这个很难", "这个搞不定" 越来越少
* 领取 **个人项目**, 作为 bonus

## 借鉴 Scrum 敏捷开发框架
* 每周一个 Sprint, 按照大版本规划 Sprint
* 持续交付, 每个 Sprint 产出的结果对于最终用户都是有用的
* 每个 Sprint 需要分拆成最小 0.5D, 最大 2D 的任务
* 每天 10 ~ 20 分钟同步进度, 解决问题
* 使用 Trello 进行项目管理

## 文档驱动
* 任何 **三个月后还有用的东西** 都需要文档
* 文档需要回答的问题: 如果我完全不了解这个项目, 我想知道什么
  * 怎么用: 如何部署/运行, 提供什么接口
  * 怎么开发: 代码结构/核心算法/核心模块和逻辑(数据流图)
